name: CI-CD
on: 
  push:
    branches: ["main"]
  workflow_dispatch:
jobs:
  CI: 
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Executar Testes de Unidade
        run: dotnet test Fiap.Noticias.TesteUnidade/Fiap.Noticias.TesteUnidade.csproj
     
      - name: Configurar SQL Server para Testes
        run: |
          docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Lucas123" -p 1433:1433 --name test-sql-server -d mcr.microsoft.com/mssql/server:2019-latest

      - name: Aguardar Inicialização do SQL Server
        run: |
          while ! nc -z localhost 1433; do sleep 1; done

      - name: Instalar Entity Framework CLI
        run: dotnet tool install --global dotnet-ef
          
      - name: Restaurar Dependências e Executar Migrações
        run: |
          dotnet restore
          dotnet ef database update --project Fiap.Noticias.Infra.Data --startup-project Fiap.Noticias.API

      - name: Executar Testes de Integração
        run: dotnet test Fiap.Noticia.TesteIntegracao/Fiap.Noticia.TesteIntegracao.csproj

      - name: Limpar Contêiner SQL Server
        run: docker stop test-sql-server && docker rm test-sql-server
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/noticiaapifiap:latest
